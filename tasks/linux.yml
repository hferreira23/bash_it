---
- name: Prep tasks
  block:
  - name: Setting amd64 architecture
    set_fact:
      arch: amd64
    when: ansible_architecture == "x86_64"

  - name: Setting arm64 architecture
    set_fact:
      arch: arm64
    when: ansible_architecture == "aarch64"

  - name: Setting arm architecture
    set_fact:
      arch: arm
    when: ansible_architecture == "armv7l"

  - name: Fetch latest download url from GH repos
    uri:
      url: "{{ item }}"
      return_content: true
    register: github_latest
    loop:
      - "https://api.github.com/repos/dandavison/delta/releases/latest"
      - "https://api.github.com/repos/sharkdp/bat/releases/latest"
  delegate_to: localhost
  run_once: true

- name: Bash_it config deploy block
  block:
  - name: Install needed packages
    block:
    - name: Install GH packages
      apt:
        deb: "{{ item }}"
      loop: "{{ github_latest.results | json_query('[*].json.assets[*].browser_download_url') | flatten }}"
      when:
        - ansible_distribution == "Debian" or ansible_distribution == "Ubuntu" or ansible_distribution == "Pop!_OS"
        - item is search(arch)
        - item is not search("musl")

    - name: Install needed packages
      package:
        name:
          - git
          - fzf
          - bash-completion
          - fd-find
        state: latest
    when: outer_item == "root"

  - name: Add fzf keybindins
    file:
      path: "{{ item.path | default(omit) }}"
      src: "{{ item.src | default(omit) }}"
      dest: "{{ item.dest | default(omit) }}"
      state: "{{ item.state | default(omit) }}"
      mode: "{{ item.mode | default(omit) }}"
    loop:
      - { path: '/usr/share/fzf', state: 'directory', mode: '0755' }
      - { src: '/usr/share/doc/fzf/examples/key-bindings.bash', dest: '/usr/share/fzf/key-bindings.bash', state: 'link', mode: '0644' }
    when: ansible_distribution == "Debian"

  - name: Add fzf completion on POP!_OS
    file:
      path: "{{ item.path | default(omit) }}"
      src: "{{ item.src | default(omit) }}"
      dest: "{{ item.dest | default(omit) }}"
      state: "{{ item.state | default(omit) }}"
      mode: "{{ item.mode | default(omit) }}"
    loop:
      - { src: '/usr/share/doc/fzf/examples/key-bindings.bash', dest: '/usr/share/fzf/key-bindings.bash', state: 'link', mode: '0644' }
    when: ansible_distribution == "Pop!_OS"

  - name: Install theme.sh
    get_url:
      url: "https://git.io/JM70M"
      dest: /usr/bin/theme.sh
      mode: 0755
      owner: 'root'
      group: 'root'
    when: outer_item == "root"

  - name: Clone bash_it repo
    git:
      repo: 'https://github.com/Bash-it/bash-it.git'
      dest: "$HOME/.bash_it"
      version: "master"
      depth: 1
      update: yes
      force: yes
    register: bashit_clone

  - name: Install bash-it
    command: "bash $HOME/.bash_it/install.sh --silent -f"
    when:
      - bashit_clone.changed or
        bashit_force_install

  - name: Remove bash_it theme folder
    file:
      path: "$HOME/.bash_it/themes/2xtreme/"
      state: absent

  - name: Deploy custom theme
    copy:
      src: "2xtreme"
      dest: $HOME/.bash_it/custom/themes/
      mode: '0750'

  - name: Install Zoxide
    shell:
      cmd: curl -sS https://webinstall.dev/zoxide | bash
    args:
      executable: /bin/bash

  - name: Deploy dot files
    template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      mode: '0640'
    loop:
      - { src: 'bashit_linux.j2', dest: '$HOME/.bashrc'}
      - { src: 'bash_personal.j2', dest: '$HOME/.bash_personal'}
      - { src: 'bash_profile.j2', dest: '$HOME/.bash_profile'}
      - { src: 'fzf.bash.j2', dest: '$HOME/.fzf.bash'}

  - name: Enable bash-it completions
    shell:
      cmd: "ALTERNATE_EDITOR=$(which vim) BASH_IT=$HOME/.bash_it source $HOME/.bash_it/bash_it.sh && BASH_IT=$HOME/.bash_it bash-it enable completion terraform virsh pip3 pip system docker docker-compose git ssh"
    args:
      executable: /bin/bash

  - name: Enable bash-it plugins
    shell:
      cmd: "ALTERNATE_EDITOR=$(which vim)  BASH_IT=$HOME/.bash_it source $HOME/.bash_it/bash_it.sh && BASH_IT=$HOME/.bash_it bash-it enable plugin alias-completion base docker fzf git history history-search man sudo thefuck"
    args:
      executable: /bin/bash

  become_user: "{{ outer_item }}"
  when: outer_item is defined
