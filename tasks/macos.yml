---
- name: Bash_it config deploy block
  block:
  - name: Install required brew packages
    community.general.homebrew:
      name: "{{ brew_packages }}"
      state: present
      update_homebrew: yes
      upgrade_all: yes
    become: false
    when: outer_item == brew_user

  - name: ROOT only tasks
    block:
    - name: Fix bash_it loading
      blockinfile:
        path: /etc/bashrc
        insertafter: EOF
        block: |

          # Forcing loading of the users bash_profile
          source $HOME/.bash_profile

    - name: Create /usr/local/bin
      file:
        path: /usr/local/bin
        state: directory
        mode: '0755'

    - name: Install theme.sh
      get_url:
        url: "https://git.io/JM70M"
        dest: /usr/local/bin/theme.sh
        mode: 0755
        owner: 'root'
        group: 'admin'
    when: outer_item == 'root'

  - name: Clone bash_it repo
    git:
      repo: 'https://github.com/Bash-it/bash-it.git'
      dest: "$HOME/.bash_it"
      version: "master"
      depth: 1
      update: yes
      force: yes
    register: bashit_clone

  - name: Install bash-it
    command: "bash $HOME/.bash_it/install.sh --silent -f"
    when:
      - bashit_clone.changed or
        bashit_force_install

  - name: Remove bash_it theme folder
    file:
      path: "$HOME/.bash_it/themes/2xtreme/"
      state: absent

  - name: Deploy dot files
    template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      mode: '0640'
    loop:
      - { src: 'bashit_macos.j2', dest: '$HOME/.bash_profile'}
      - { src: 'bash_personal.j2', dest: '$HOME/.bash_personal'}
      - { src: 'bashrc.j2', dest: '$HOME/.bashrc'}
      - { src: 'fzf.bash.j2', dest: '$HOME/.fzf.bash'}

  - name: Deploy custom theme and kitty config
    copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      mode: "{{ item.mode }}"
    loop:
      - { src: "2xtreme",dest: "$HOME/.bash_it/custom/themes/", mode: '0750'}
      - { src: kitty.conf, dest: "$HOME/.config/kitty/", mode: '0640'}

  - name: Enable bash-it completions
    shell:
      cmd: "ALTERNATE_EDITOR=$(which vim) BASH_IT=$HOME/.bash_it source $HOME/.bash_it/bash_it.sh && BASH_IT=$HOME/.bash_it bash-it enable completion terraform virsh pip3 pip system docker docker-compose git ssh"
    args:
      executable: /bin/bash

  - name: Enable bash-it plugins
    shell:
      cmd: "ALTERNATE_EDITOR=$(which vim) BASH_IT=$HOME/.bash_it source $HOME/.bash_it/bash_it.sh && BASH_IT=$HOME/.bash_it bash-it enable plugin alias-completion base docker fzf git history history-search man sudo thefuck"
    args:
      executable: /bin/bash

  become_user: "{{ outer_item }}"
  when: outer_item is defined
